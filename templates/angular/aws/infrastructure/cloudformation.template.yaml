AWSTemplateFormatVersion: "2010-09-09"
Resources:

  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref S3BucketNameParameter
    DependsOn:
      - S3Bucket

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: 'Private'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Ref S3BucketNameParameter
      VersioningConfiguration:
        Status: 'Enabled'

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - !Ref S3Bucket
                  - "/*"
            Principal:
              AWS: !Join
                - ''
                - - 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity '
                  - !Ref OriginAccessIdentity
    DependsOn:
      - S3Bucket
      - OriginAccessIdentity


  #
  # CACHE
  #
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DNSRecordNameParameter
        DefaultCacheBehavior:
          AllowedMethods: ["GET", "HEAD", "OPTIONS"]
          Compress: true
          ForwardedValues:
            QueryString: true
          TargetOriginId: "S3Bucket"
          ViewerProtocolPolicy: "redirect-to-https"
        Enabled: true
        Origins:
          - S3OriginConfig:
              OriginAccessIdentity: !Join
                - ''
                - - 'origin-access-identity/cloudfront/'
                  - !Ref OriginAccessIdentity
            DomainName: !GetAtt S3Bucket.DomainName
            OriginPath: !Join
              - ''
              - - '/deployments/'
                - !Ref BuildNumberParameter
                - '/'
                - !Ref FolderParameter
            Id: "S3Bucket"
        DefaultRootObject: 'index.html'
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArnParameter
          SslSupportMethod: sni-only
        CustomErrorResponses:
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/index.html'
          - ErrorCachingMinTTL: 300
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: '/index.html'
    DependsOn:
      - S3Bucket
      - BucketPolicy
      - OriginAccessIdentity

  #
  # ROUTING
  #
  Route53Record:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Name: !Ref DNSRecordNameParameter
      Type: A
      HostedZoneId: !Ref Route53HostedZoneId
    DependsOn:
      - CloudFrontDistribution


Parameters:
  CertificateArnParameter:
    Type: String
  DNSRecordNameParameter:
    Type: String
  S3BucketNameParameter:
    Type: String
  BuildNumberParameter:
    Type: String
  FolderParameter:
    Type: String
  Route53HostedZoneId:
    Type: String
